/* groovylint-disable LineLength, NestedBlockDepth */
/* groovylint-disable-next-line CompileStatic, NglParseError */
pipeline {
    agent any
    stages {
        stage('File Structure') {
            steps {
                sh 'ls -la'
            }
        }
        stage('Azure Login') {
            steps {
                script {
                    withCredentials([,
                                     string(credentialsId: 'AZURE_CLIENT_ID', variable: 'AZURE_CLIENT_ID'),
                                     string(credentialsId: 'AZURE_CLIENT_SECRET', variable: 'AZURE_CLIENT_SECRET'),
                                     string(credentialsId: 'AZURE_SUBSCRIPTION_ID', variable: 'AZURE_SUBSCRIPTION_ID'),
                                     string(credentialsId: 'AZURE_TENANT_ID', variable: 'AZURE_TENANT_ID')
                                     ]) {
                        // Use the credentials, e.g., in a shell command
                        sh 'az login --service-principal -t $AZURE_TENANT_ID -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET'

                        // -var client_id=$AZURE_CLIENT_ID -var client_secret=$AZURE_CLIENT_SECRET -var subscription_id=$AZURE_SUBSCRIPTION_ID -var client_tenant=$AZURE_TENANT_ID
                    }
                }
            }
        }
        stage('Terraform Version') {
            steps {
                sh 'terraform -version'
            }
        }
        stage('Terraform Init') {
            steps {
                sh 'terraform -chdir=TF-WebApp/ init'
            }
        }
        stage('Terraform Plan') {
            steps {
                sh 'terraform -chdir=TF-WebApp/ plan -out=myplan.tfplan'
            }
        }
        stage('Approve Terraform Apply') {
            steps {
                input 'Do you approve the terraform apply?'
            }
        }
        stage('Terraform Apply') {
            steps {
                sh 'terraform -chdir=TF-WebApp/ apply myplan.tfplan'
            }
        }
    }
}
